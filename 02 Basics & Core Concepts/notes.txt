============= Core Concepts  =============

New Vue App:
- creating vue apps
    const app = Vue.createApp({ ... })
    app.mount('...')

Data Binding:
interpolation       <el>{{ ... }}</el>
binding             <el v-bind:href='...'>...</el>
raw html            <el v-html='...'></el>

App Options:
    data () { ... },
    methods: {
        function() { ... },
        function() { ... }
    }


============= Event Binding =============

TWO WAY BINDING: Listening & Writting 
    v-bind:value="name" v-on:input="setName"
    v-model="name"

NOTE: running one method on your page will run every method on your page

    v-on:click
    @click

    v-bind:value
    :value
    
============= Computed Properties =============

Computed Properties:
- Vue is aware of the dependencies of the computed properties
- it will cache the computed property only if that property changes
- better for outputting values
- if you want to recalculate anytime something changes
- only use computed properties for outputting something
- do not use them as methods/events
- bind events to methods
- do not bind events to computed properties


============= Watchers  =============

- you can use watchers instead of computed properties
- define methods in watchers
- whenever data "name" changes, "name" watcher method will execute automatically
- no returning, just logic
- value is automatically passed & previous value
- alternative for computed property
CONS: if we have two properties.... use computed



============= Methods vs Computed vs Watch =============


METHOD                  COMPUTED                            WATCH
data binding            only data binding                   not in template
event binding           executes on dependency changes      reacts to changed data
re-executes everytime   data depending on data              non-data updates